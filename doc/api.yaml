openapi: 3.0.0
paths:
  /user:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags: &a1
        - Users
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDto"
      tags: *a1
  /user/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags: *a1
    put:
      operationId: UsersController_updatePassword
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags: *a1
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags: *a1
  /album:
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumDto"
      tags: &a2
        - Albums
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AlbumDto"
      tags: *a2
  /album/{id}:
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumDto"
      tags: *a2
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlbumDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumDto"
      tags: *a2
    delete:
      operationId: AlbumsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumDto"
      tags: *a2
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        "200":
          description: ""
      tags: &a3
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackDto"
      tags: *a3
    delete:
      operationId: FavoritesController_removeTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a3
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumDto"
      tags: *a3
    delete:
      operationId: FavoritesController_removeAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a3
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDto"
      tags: *a3
    delete:
      operationId: FavoritesController_removeArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags: *a3
  /artist:
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDto"
      tags: &a4
        - Artists
    get:
      operationId: ArtistsController_findAll
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArtistDto"
      tags: *a4
  /artist/{id}:
    get:
      operationId: ArtistsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDto"
      tags: *a4
    put:
      operationId: ArtistsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArtistDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDto"
      tags: *a4
    delete:
      operationId: ArtistsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDto"
      tags: *a4
  /track:
    post:
      operationId: TracksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackDto"
      tags: &a5
        - Tracks
    get:
      operationId: TracksController_findAll
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TrackDto"
      tags: *a5
  /track/{id}:
    get:
      operationId: TracksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackDto"
      tags: *a5
    put:
      operationId: TracksController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTrackDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackDto"
      tags: *a5
    delete:
      operationId: TracksController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrackDto"
      tags: *a5
info:
  title: Home Library Service
  description: Home music library service
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          example: TEST_LOGIN
          description: User login
        password:
          type: string
          example: TEST_PASSWORD
          description: User password
      required:
        - login
        - password
    UserDto:
      type: object
      properties:
        id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: User id
          format: uuid
        login:
          type: string
          example: TEST_LOGIN
          description: User login
        version:
          type: number
          example: "3"
          description: User version
        createdAt:
          type: number
          example: "1655649600"
          description: Timestamp of creation
        updatedAt:
          type: number
          example: "1655649600"
          description: Timestamp of last update
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdatePasswordDto:
      type: object
      properties: {}
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          example: Toxicity
          description: Album name
        year:
          type: number
          example: 2021
          description: Album year
        artistId:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Album artist id
          format: uuid
      required:
        - name
        - year
    AlbumDto:
      type: object
      properties:
        id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Album id
          format: uuid
        name:
          type: string
          example: Toxicity
          description: Album name
        year:
          type: number
          example: 2021
          description: Album year
        artistId:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Album artist id
          format: uuid
          nullable: true
      required:
        - id
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties: {}
    TrackDto:
      type: object
      properties:
        id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Track id
          format: uuid
        name:
          type: string
          example: Chop Suey!
        artistId:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Artist ID
          format: uuid
          nullable: true
        albumId:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Album ID
          format: uuid
          nullable: true
        duration:
          type: number
          example: 262
          description: Duration in seconds
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    ArtistDto:
      type: object
      properties:
        id:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Artist id
          format: uuid
        name:
          type: string
          description: Name of the artist
          example: System of a Down
        grammy:
          type: boolean
          description: Grammy award for the artist
          example: true
      required:
        - id
        - name
        - grammy
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the artist
          example: System of a Down
        grammy:
          type: boolean
          description: Grammy award for the artist
          example: true
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties: {}
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          example: Chop Suey!
        artistId:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Artist ID
          format: uuid
        albumId:
          type: string
          example: 550e8400-e29b-41d4-a716-446655440000
          description: Album ID
          format: uuid
        duration:
          type: number
          example: 262
          description: Duration in seconds
      required:
        - name
        - duration
    UpdateTrackDto:
      type: object
      properties: {}
